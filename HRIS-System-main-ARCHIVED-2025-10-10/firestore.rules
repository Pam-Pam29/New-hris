rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Employee Profiles - Employees can read/update their own profile, HR can read all
    match /employeeProfiles/{employeeId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == employeeId || 
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Leave Requests - Employees can create/read their own, HR can read/write all
    match /leaveRequests/{requestId} {
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.employeeId;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow update: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Leave Balances - Employees can read their own, HR can read/write all
    match /leaveBalances/{balanceId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow write: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Leave Types - HR can read/write, employees can read
    match /leaveTypes/{typeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Policies - HR can read/write, employees can read
    match /policies/{policyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Policy Acknowledgments - Employees can create their own, HR can read all
    match /policyAcknowledgments/{ackId} {
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.employeeId;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Performance Goals - Employees can read/write their own, HR can read/write all
    match /performanceGoals/{goalId} {
      allow create: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow read, update: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow delete: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Performance Reviews - Employees can read their own, HR can read/write all
    match /performanceReviews/{reviewId} {
      allow create: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.uid == resource.data.reviewerId ||
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.uid == resource.data.reviewerId ||
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.reviewerId ||
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Meeting Schedules - Employees can read/write their own, HR can read/write all
    match /meetingSchedules/{meetingId} {
      allow create: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.uid == resource.data.managerId ||
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow read, update: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.uid == resource.data.managerId ||
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow delete: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Notifications - Users can read their own, HR can read/write all
    match /notifications/{notificationId} {
      allow read, update: if request.auth != null && 
        (request.auth.uid == resource.data.employeeId || 
         request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow create: if request.auth != null;
    }
    
    // Activity Logs - Read-only for HR and admins
    match /activityLogs/{logId} {
      allow read: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
    
    // Employees collection - HR can read/write all
    match /employees/{employeeId} {
      allow read: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
      allow write: if request.auth != null && 
        (request.auth.token.role == 'hr' || 
         request.auth.token.role == 'admin');
    }
  }
}
